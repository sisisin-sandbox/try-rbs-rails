module ActionMailbox
  class InboundEmail < ActionMailbox::Record
    extend _ActiveRecord_Relation_ClassMethods[ActionMailbox::InboundEmail, ActiveRecord_Relation]

    attr_accessor id(): Integer
    def id_changed?: () -> bool
    def id_change: () -> [ Integer?, Integer? ]
    def id_will_change!: () -> void
    def id_was: () -> Integer?
    def id_previously_changed?: () -> bool
    def id_previous_change: () -> Array[Integer?]?
    def id_previously_was: () -> Integer?
    def restore_id!: () -> void
    def clear_id_change: () -> void

    attr_accessor status(): Integer
    def status_changed?: () -> bool
    def status_change: () -> [ Integer?, Integer? ]
    def status_will_change!: () -> void
    def status_was: () -> Integer?
    def status_previously_changed?: () -> bool
    def status_previous_change: () -> Array[Integer?]?
    def status_previously_was: () -> Integer?
    def restore_status!: () -> void
    def clear_status_change: () -> void

    attr_accessor message_id(): String
    def message_id_changed?: () -> bool
    def message_id_change: () -> [ String?, String? ]
    def message_id_will_change!: () -> void
    def message_id_was: () -> String?
    def message_id_previously_changed?: () -> bool
    def message_id_previous_change: () -> Array[String?]?
    def message_id_previously_was: () -> String?
    def restore_message_id!: () -> void
    def clear_message_id_change: () -> void

    attr_accessor message_checksum(): String
    def message_checksum_changed?: () -> bool
    def message_checksum_change: () -> [ String?, String? ]
    def message_checksum_will_change!: () -> void
    def message_checksum_was: () -> String?
    def message_checksum_previously_changed?: () -> bool
    def message_checksum_previous_change: () -> Array[String?]?
    def message_checksum_previously_was: () -> String?
    def restore_message_checksum!: () -> void
    def clear_message_checksum_change: () -> void

    attr_accessor created_at(): ActiveSupport::TimeWithZone
    def created_at_changed?: () -> bool
    def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]
    def created_at_will_change!: () -> void
    def created_at_was: () -> ActiveSupport::TimeWithZone?
    def created_at_previously_changed?: () -> bool
    def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?
    def created_at_previously_was: () -> ActiveSupport::TimeWithZone?
    def restore_created_at!: () -> void
    def clear_created_at_change: () -> void

    attr_accessor updated_at(): ActiveSupport::TimeWithZone
    def updated_at_changed?: () -> bool
    def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]
    def updated_at_will_change!: () -> void
    def updated_at_was: () -> ActiveSupport::TimeWithZone?
    def updated_at_previously_changed?: () -> bool
    def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?
    def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?
    def restore_updated_at!: () -> void
    def clear_updated_at_change: () -> void

    def raw_email_attachment: () -> ActiveStorage::Attachment
    def raw_email_attachment=: (ActiveStorage::Attachment?) -> ActiveStorage::Attachment?
    def build_raw_email_attachment: (untyped) -> ActiveStorage::Attachment
    def create_raw_email_attachment: (untyped) -> ActiveStorage::Attachment
    def create_raw_email_attachment!: (untyped) -> ActiveStorage::Attachment
    def reload_raw_email_attachment: () -> ActiveStorage::Attachment?
    def raw_email_blob: () -> ActiveStorage::Blob
    def raw_email_blob=: (ActiveStorage::Blob?) -> ActiveStorage::Blob?
    def build_raw_email_blob: (untyped) -> ActiveStorage::Blob
    def create_raw_email_blob: (untyped) -> ActiveStorage::Blob
    def create_raw_email_blob!: (untyped) -> ActiveStorage::Blob
    def reload_raw_email_blob: () -> ActiveStorage::Blob?

    class ActiveRecord_Relation < ActiveRecord::Relation
      include _ActiveRecord_Relation[ActionMailbox::InboundEmail]
      include Enumerable[ActionMailbox::InboundEmail]
    end

    class ActiveRecord_Associations_CollectionProxy < ActiveRecord::Associations::CollectionProxy
    end
  end
end
